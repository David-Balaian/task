{"version":3,"sources":["components/login/login.module.scss","components/items/items.module.scss","components/itemInner/itemInner.module.scss","store/auth/actions.js","store/auth/selectors.js","components/login/login.jsx","store/list/selectors.js","store/list/actions.js","hooks/useGetList.js","components/common/table/index.jsx","components/common/table/useTable.js","hooks/useTableDataFormatter.js","hooks/useVirtualization.js","components/items/items.jsx","components/common/profileCard/index.jsx","components/itemInner/itemInner.jsx","store/loading/selectors.js","App.js","history.js","store/auth/reducer.js","store/loading/actions.js","store/loading/reducer.js","store/list/reducer.js","store/rootReducer.js","store/auth/saga.js","api/config.js","store/list/saga.js","store/rootSaga.js","store/config.js","index.js"],"names":["module","exports","createActions","payload","login","loginSuccess","loginError","logout","getError","state","auth","error","Login","dispatch","useDispatch","useState","userName","setUserName","password","setPassword","useSelector","store","console","log","className","styles","loginContainer","wrapper","TextField","variant","fullWidth","label","value","onChange","e","target","helperText","type","Button","color","size","onClick","getItems","items","list","getList","getListSuccess","getListError","useGetList","count","useEffect","results","DataTable","series","history","useHistory","rowsCount","setRowsCount","rowsCountAsync","setRowsCountAsync","timeoutId","useRef","handleRowsChange","Math","min","current","clearTimeout","setTimeout","handleMoreClick","id","push","useTable","columnDefs","align","cellRenderer","url","src","alt","rows","reduce","item","rowItem","username","name","first","last","avatar","picture","thumbnail","gender","email","age","dob","useTableDateFormatter","visibleRows","setVisibleRows","offsetBuffer","startIndex","endIndex","showing","setShowing","containerRef","wrapperRef","wrapperStyle","height","length","paddingTop","handleContScroll","index","scrollTop","round","rowHeight","useVirtualization","ref","style","width","overflow","onScroll","margin","boxSizing","position","TableContainer","component","Paper","elevation","Table","sx","TableHead","TableRow","map","column","TableCell","key","TableBody","slice","row","border","Box","bottom","right","backgroundColor","Items","container","ProfileCard","data","userInfo","nat","registered","location","city","phone","Card","display","CardMedia","image","large","flexDirection","CardContent","Typography","Chip","ItemInner","useLocation","setUserInfo","pathname","split","pop","find","getLoading","status","loading","App","Backdrop","zIndex","open","CircularProgress","exact","path","createBrowserHistory","initialState","handleActions","startLoading","stopLoading","combineReducers","router","connectRouter","loginSaga","logoutSaga","authWatcherSaga","all","put","call","takeLatest","publicAPI","axios","create","baseURL","interceptors","request","use","response","getListSaga","listWatcherSaga","params","get","rootSaga","spawn","configureStore","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","rootReducer","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e25b220.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"login_loginContainer__3mN-Z\",\"wrapper\":\"login_wrapper__2fpXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"items_container__3s0oK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"itemInner_container__3L9ls\"};","import { createActions } from 'redux-actions';\r\n\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const {\r\n  login,\r\n  loginSuccess,\r\n  loginError,\r\n  logout,\r\n} = createActions({\r\n  [LOGIN]: (payload) => payload,\r\n  [LOGIN_SUCCESS]: (payload) => payload,\r\n  [LOGIN_ERROR]: (payload) => payload,\r\n  [LOGOUT]: (payload) => payload,\r\n});\r\n","export const getUserName = (state) => state.auth.userName;\r\nexport const getError = (state) => state.auth.error;\r\n","import React, { useState } from 'react'\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport styles from './login.module.scss'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../store/auth/actions';\r\nimport { useSelector } from 'react-redux';\r\nimport { getError } from '../../store/auth/selectors';\r\n\r\nexport default function Login() {\r\n    const dispatch = useDispatch()\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const loginError = useSelector(getError)\r\n\r\n    const state = useSelector(store => store)\r\n    console.log(`state`, state)\r\n\r\n    const handleUserName = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        dispatch(login({ userName, password }))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.loginContainer} >\r\n            <div className={styles.wrapper}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    label='Username'\r\n                    value={userName}\r\n                    onChange={handleUserName}\r\n                    error={!!loginError}\r\n                    helperText={loginError}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    label='Password'\r\n                    type='password'                    \r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                    error={!!loginError}\r\n                    helperText={loginError}\r\n                />\r\n                <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    fullWidth\r\n                    size='large'\r\n                    onClick={handleLogin}\r\n                > Log in </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const getItems = (state) => state.items.list;\r\nexport const getError = (state) => state.auth.error;\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const GET_LIST = 'GET_LIST';\r\nexport const GET_LIST_SUCCESS = 'GET_LIST_SUCCESS';\r\nexport const GET_LIST_ERROR = 'GET_LIST_ERROR';\r\n\r\nexport const {\r\n  getList,\r\n  getListSuccess,\r\n  getListError,\r\n} = createActions({\r\n  [GET_LIST]: (payload) => payload,\r\n  [GET_LIST_SUCCESS]: (payload) => payload,\r\n  [GET_LIST_ERROR]: (payload) => payload,\r\n});\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getList } from '../store/list/actions'\r\n\r\nexport default function useGetList(count) {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getList({results: count}))\r\n      }, [dispatch, count])\r\n}","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Button, TextField, Box } from '@mui/material';\r\nimport useTable from './useTable';\r\nimport useTableDateFormatter from '../../../hooks/useTableDataFormatter';\r\nimport useVirtualization from '../../../hooks/useVirtualization';\r\n\r\nexport default function DataTable({ series }) {\r\n\r\n    const {\r\n        rowsCount,\r\n        rowsCountAsync,\r\n        handleMoreClick,\r\n        handleRowsChange,\r\n    } = useTable();\r\n\r\n    const {\r\n        columnDefs,\r\n        rows,\r\n    } = useTableDateFormatter(series);\r\n\r\n    const {\r\n        containerRef,\r\n        wrapperRef,\r\n        wrapperStyle,\r\n        showing, \r\n        rowHeight,\r\n        handleContScroll,\r\n    } = useVirtualization(rows, rowsCountAsync)\r\n\r\n    return (\r\n        <div \r\n            ref={containerRef}\r\n            style={{\r\n                width: '100%',\r\n                height: '100vh',\r\n                overflow: 'auto',\r\n            }}\r\n            onScroll={handleContScroll}\r\n        >\r\n            <div\r\n                ref={wrapperRef}\r\n                style={{\r\n                    height: wrapperStyle.height,\r\n                    paddingTop: wrapperStyle.paddingTop,\r\n                    width: 'fit-content',\r\n                    margin: '0 auto',\r\n                    boxSizing: 'border-box',\r\n                    position: 'relative',\r\n                }}\r\n            >\r\n                <TableContainer component={Paper} elevation={10}>\r\n                    <Table sx={{ width: '100%' }} >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columnDefs.map(column => <TableCell key={column.label} align={column.align}>{column.label}</TableCell>)}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.slice(showing.startIndex, showing.endIndex).map((row) => (\r\n                                <TableRow\r\n                                    key={row.name}\r\n                                    sx={{ height: rowHeight,  '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    {columnDefs.map(column => <TableCell key={column.label} align={column.align}>{column.cellRenderer ? column.cellRenderer(row[column.label]) : row[column.label]}</TableCell>)}\r\n                                    <TableCell> <Button onClick={() => { handleMoreClick(row.id) }} variant='contained' color='primary' fullWidth >more</Button> </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Box sx={{ position: 'fixed', bottom: 0, right: 0, backgroundColor: '#fff' }} >\r\n                        <TextField\r\n                            variant='filled'\r\n                            color='primary'\r\n                            helperText='note: table will virtualize rows if the count exceed 100'\r\n                            label='Rows count'\r\n                            type='number'\r\n                            value={rowsCount}\r\n                            onChange={handleRowsChange}\r\n                        />\r\n                    </Box>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport useGetList from '../../../hooks/useGetList';\r\n\r\nexport default function useTable() {\r\n    const initialRows = 10\r\n    const history = useHistory();\r\n    const [rowsCount, setRowsCount] = useState(initialRows)\r\n    const [rowsCountAsync, setRowsCountAsync] = useState(initialRows)\r\n    const timeoutId = useRef(null)\r\n\r\n    const handleRowsChange = (e) => {\r\n        setRowsCount(+e.target.value ? Math.min(5000, +e.target.value) : 1)\r\n        if (timeoutId.current) clearTimeout(timeoutId.current)\r\n        timeoutId.current = setTimeout(() => {\r\n            +e.target.value ? setRowsCountAsync(Math.min(5000, +e.target.value)) : setRowsCountAsync(1)\r\n        }, 600)\r\n\r\n    }\r\n\r\n    const handleMoreClick = (id) => history.push(`/items/${id}`)\r\n\r\n    useGetList(rowsCountAsync)\r\n\r\n    return { rowsCount, handleRowsChange, setRowsCount, rowsCountAsync, handleMoreClick }\r\n}","import React from 'react';\r\n\r\nexport default function useTableDateFormatter(series) {\r\n    const columnDefs = [\r\n        { label: 'name', align: 'left' },\r\n        { label: 'avatar', align: 'center', cellRenderer: (url) => <img src={url} alt='' /> },\r\n        { label: 'gender', align: 'right' },\r\n        { label: 'email', align: 'right' },\r\n        { label: 'age', align: 'right' }\r\n    ]\r\n    const rows = series.reduce((rows, item) => {\r\n        const rowItem = {\r\n            id: item.login.username,\r\n            name: `${item.name.first} ${item.name.last}`,\r\n            avatar: item.picture.thumbnail,\r\n            gender: item.gender,\r\n            email: item.email,\r\n            age: item.dob.age,\r\n        }\r\n        rows.push(rowItem)\r\n        return rows\r\n    }, [])\r\n\r\n    return { rows, columnDefs }\r\n}","import { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport default function useVirtualization(rows, rowsCountAsync) {\r\n    \r\n    const [visibleRows, setVisibleRows] = useState(10);\r\n    const rowHeight = 100;\r\n    const offsetBuffer = rowsCountAsync === visibleRows ? 0 : Math.min(10, rowsCountAsync - visibleRows);\r\n\r\n    const [showing, setShowing] = useState({\r\n        startIndex: 0,\r\n        endIndex: visibleRows,\r\n    });\r\n\r\n\r\n    const containerRef = useRef();\r\n    const wrapperRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if(rowsCountAsync < 100) {\r\n            setVisibleRows(rowsCountAsync);\r\n        }\r\n    }, [containerRef, rowsCountAsync]);\r\n\r\n    const handleContScroll = () => {\r\n        if(visibleRows === rowsCountAsync) {\r\n            setShowing({\r\n                startIndex: 0,\r\n                endIndex: rowsCountAsync,\r\n            });\r\n            return\r\n        }\r\n        const containerScrollTop = containerRef.current.scrollTop;\r\n        let index = (containerScrollTop * offsetBuffer) / (rowHeight * offsetBuffer);\r\n        if (index < offsetBuffer) index = offsetBuffer;\r\n        setShowing({\r\n            startIndex: Math.round(Math.min(rowsCountAsync - offsetBuffer - visibleRows,  index - offsetBuffer)),\r\n            endIndex: Math.round(Math.min(rowsCountAsync, index + offsetBuffer + visibleRows)),\r\n        });\r\n    };\r\n\r\n    const wrapperStyle = {\r\n        height: rows.length * rowHeight,\r\n        paddingTop: rowHeight * showing.startIndex,\r\n    };\r\n\r\n    return {\r\n        containerRef,\r\n        handleContScroll,\r\n        wrapperRef,\r\n        wrapperStyle,\r\n        showing, \r\n        rowHeight,\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getItems } from '../../store/list/selectors';\r\nimport DataTable from '../common/table';\r\nimport styles from './items.module.scss';\r\n\r\nexport default function Items() {\r\n    const list = useSelector(getItems)\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            {!!list.length && <DataTable series={list} />}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Chip } from '@mui/material';\r\n\r\nexport default function ProfileCard({ data }) {\r\n\r\n  const userInfo = [\r\n    { label: 'Gender', value: data.gender },\r\n    { label: 'Natioanality', value: data.nat },\r\n    { label: 'Age', value: data.registered.age },\r\n    { label: 'City', value: data.location.city },\r\n    { label: 'Phone', value: data.phone },\r\n\r\n  ]\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex' }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        sx={{ width: 150 }}\r\n        image={data?.picture?.large}\r\n        alt={data?.name?.first}\r\n      />\r\n      <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n        <CardContent >\r\n          <Typography component=\"div\" variant=\"h5\">\r\n            {`${data?.name?.first} ${data?.name?.last}`}\r\n          </Typography>\r\n          <Box sx={{display:'flex', flexDirection:'column', width: 'fit-content'}}>\r\n            {userInfo.map(({ label, value }) => (\r\n              <Chip key={label} label={`${label}: ${value}`} />\r\n            )\r\n            )}\r\n            </Box>\r\n        </CardContent>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router';\r\nimport styles from './itemInner.module.scss';\r\nimport ProfileCard from '../common/profileCard';\r\n\r\nexport default function ItemInner() {\r\n\r\n    const series = useSelector(store => store.items.list)\r\n    const location = useLocation()\r\n    const [userInfo, setUserInfo] = useState(null)\r\n\r\n    const onMount = () => {\r\n        const id = location.pathname.split('/').pop()\r\n        setUserInfo(series.find(item => item.login.username === id))\r\n    }\r\n\r\n    useEffect(onMount, [])\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            {userInfo ?\r\n                <ProfileCard data={userInfo} />\r\n                :\r\n                <>\r\n                    <h1>\r\n                        <strong> {location.pathname.split('/').pop()} user not found</strong>\r\n                    </h1>\r\n                    <h6>\r\n                        If you come here by URL or refreshed the page the user can not be found as if the list updated already.\r\n                    </h6>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","export const getLoading = (state) => state.status.loading;\r\n","import React from 'react';\nimport {\n  Switch,\n  Route\n} from 'react-router';\nimport Login from './components/login/login';\nimport Items from './components/items/items';\nimport ItemInner from './components/itemInner/itemInner';\nimport { useSelector } from 'react-redux';\nimport { getLoading } from './store/loading/selectors';\nimport { Backdrop, CircularProgress } from '@mui/material';\nimport useGetList from './hooks/useGetList';\n\n\nexport default function App() {\n  useGetList(5);\n  const loading = useSelector(getLoading);\n\n  return (\n    <>\n      <Backdrop\n        sx={{ color: '#fff', zIndex: 900 }}\n        open={loading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Switch>\n        <Route exact path={'/'} component={Login} />\n        <Route exact path={'/items'} component={Items} />\n        <Route exact path={'/items/:id'} component={ItemInner} />\n      </Switch>\n    </>\n  );\n}","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import { handleActions } from 'redux-actions';\r\n\r\nimport {\r\n  LOGIN_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from './actions';\r\n\r\nexport const initialState = {\r\n  userName: null,\r\n  password: null,\r\n  error: null,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [LOGIN_ERROR]: (state, { payload }) => ({ ...state, ...payload }), \r\n    [LOGIN_SUCCESS]: (state, { payload }) => ({ ...state, ...payload, error: null, }),\r\n    [LOGOUT]: () => ({ ...initialState }),\r\n  },\r\n  initialState\r\n);\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const START_LOADING = 'START_LOADING';\r\nexport const STOP_LOADING = 'STOP_LOADING';\r\n\r\nexport const {\r\n  startLoading,\r\n  stopLoading\r\n} = createActions({\r\n  [START_LOADING]: (payload) => payload,\r\n  [STOP_LOADING]: (payload) => payload,\r\n});\r\n","import { handleActions } from 'redux-actions';\r\n\r\nimport {\r\n  START_LOADING,\r\n  STOP_LOADING,\r\n} from './actions';\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [START_LOADING]: () => ({ loading: true }), \r\n    [STOP_LOADING]: () => ({ loading: false }), \r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\n\r\nimport {\r\n  GET_LIST_SUCCESS,\r\n  GET_LIST_ERROR,\r\n} from './actions';\r\n\r\nexport const initialState = {\r\n  list: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_LIST_SUCCESS]: (state, { payload }) => ({ ...state, ...payload }), \r\n    [GET_LIST_ERROR]: (state, { payload }) => ({ ...state, ...payload, error: null, }),\r\n  },\r\n  initialState\r\n);\r\n","import { connectRouter } from 'connected-react-router';\r\nimport { combineReducers } from 'redux';\r\nimport history from '../history';\r\nimport auth from './auth/reducer'\r\nimport status from './loading/reducer'\r\nimport items from './list/reducer'\r\n\r\nexport default combineReducers({\r\n  router: connectRouter(history),\r\n  status,\r\n  auth,\r\n  items,\r\n});","import { push } from 'connected-react-router';\r\nimport { takeLatest, put, call, all } from 'redux-saga/effects';\r\n\r\nimport {\r\n  LOGIN,\r\n  loginError,\r\n  loginSuccess,\r\n  LOGOUT,\r\n  logout,\r\n} from './actions';\r\n\r\nfunction* loginSaga({payload: { userName, password }}) {\r\n  try {\r\n    if(userName && password){\r\n      yield all([put(loginSuccess({ userName, password })), put(push('/items'))])\r\n    }else{\r\n      yield put(loginError({ error: 'Please fill both fields' }))\r\n    }\r\n  } catch (e) {\r\n    yield call(logoutSaga);\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  yield put(logout());\r\n}\r\n\r\nexport default function* authWatcherSaga() {\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n","import axios from 'axios';\r\nimport { startLoading, stopLoading } from '../store/loading/actions';\r\nimport store from '../store/config';\r\n\r\nconst publicAPI = axios.create({ baseURL: 'https://randomuser.me' })\r\n\r\npublicAPI.interceptors.request.use((request) => {\r\n  store.dispatch(startLoading());\r\n  return request;\r\n})\r\n\r\npublicAPI.interceptors.response.use((response) => {\r\n  store.dispatch(stopLoading());\r\n  return response;\r\n})\r\n\r\nexport { publicAPI }","import { takeLatest, put, call } from 'redux-saga/effects';\r\nimport { publicAPI } from '../../api/config';\r\n\r\nimport {\r\n  getListSuccess,\r\n  getListError,\r\n  GET_LIST,\r\n} from './actions';\r\n\r\nfunction* getListSaga({payload: params}) {\r\n  try {\r\n    const { data: { results } } = yield call(publicAPI.get, '/api', { params })\r\n    yield put(getListSuccess({list: results}))\r\n  } catch (e) {\r\n    yield put(getListError())\r\n  }\r\n}\r\n\r\nexport default function* listWatcherSaga() {\r\n  yield takeLatest(GET_LIST, getListSaga);\r\n}\r\n","import { spawn } from 'redux-saga/effects';\r\n\r\nimport authWatcherSaga from './auth/saga';\r\nimport listWatcherSaga from './list/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield spawn(authWatcherSaga);\r\n  yield spawn(listWatcherSaga);\r\n}\r\n","import { compose, applyMiddleware, createStore } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\nimport history from '../history';\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\r\n\r\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const enhancer = composeEnhancer(applyMiddleware(...middlewares));\r\n\r\n  const store = createStore(rootReducer, enhancer);\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store/config';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport history from './history';\n\nReactDOM.render(\n    <Provider store={configureStore}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}